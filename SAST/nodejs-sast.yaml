name: JavaScript SAST Scan

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly scan on Sunday at midnight

jobs:
  sast-scan:
    name: Run JavaScript SAST Scan
    runs-on:
      group: huit-arc
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install SAST tools
      run: |
        python -m pip install semgrep
        npm install -g snyk
        npm install -g eslint
        npm install -g eslint-plugin-security

    - name: Run npm audit
      run: |
        npm audit --json > npm-audit-report.json

    - name: Run Snyk security scan
      run: |
        snyk test --json > snyk-report.json

    - name: Run ESLint with security rules
      run: |
        eslint . --ext .js,.jsx,.ts,.tsx --format json --output-file eslint-report.json

    - name: Run Semgrep
      run: |
        semgrep --config=p/javascript --config=p/owasp-top-ten \
        --json -o semgrep-report.json \
        --exclude='**/node_modules/**' --exclude='**/dist/**'

    - name: Upload reports as artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: sast-results
        path: |
          npm-audit-report.json
          snyk-report.json
          eslint-report.json
          semgrep-report.json
        retention-days: 7

    - name: Check for critical findings
      run: |
        # Check npm audit for critical vulnerabilities
        if jq -e '.vulnerabilities[] | select(.severity == "critical")' npm-audit-report.json; then
          echo "::error::Critical npm vulnerabilities found!"
          exit 1
        fi
        
        # Check Snyk for critical vulnerabilities
        if jq -e '.vulnerabilities[] | select(.severity == "critical")' snyk-report.json; then
          echo "::error::Critical Snyk vulnerabilities found!"
          exit 1
        fi
        
        # Check ESLint for critical security issues
        if jq -e '.messages[] | select(.severity == 2 and .ruleId | startswith("security/"))' eslint-report.json; then
          echo "::error::Critical ESLint security issues found!"
          exit 1
        fi
        
        # Check Semgrep for critical findings
        if jq -e '.results[] | select(.extra.severity == "ERROR")' semgrep-report.json; then
          echo "::error::Critical Semgrep findings detected!"
          exit 1
        fi